// Sistema de inicializa√ß√£o da aplica√ß√£o
// Este arquivo √© executado no startup da aplica√ß√£o

import { paymentChecker } from '@/lib/cron/payment-checker'

let isInitialized = false

export function initializeApp() {
  if (isInitialized) {
    console.log('‚ö†Ô∏è App already initialized')
    return
  }

  console.log('üöÄ Initializing QueroDocumento application...')

  try {
    // Iniciar cron jobs em produ√ß√£o ou quando habilitado
    if (process.env.NODE_ENV === 'production' || process.env.ENABLE_PAYMENT_CRON === 'true') {
      console.log('üïê Starting payment checker cron...')
      paymentChecker.start()
    } else {
      console.log('‚è∏Ô∏è Payment cron disabled (development mode)')
      console.log('üí° To enable: set ENABLE_PAYMENT_CRON=true in .env')
    }

    isInitialized = true
    console.log('‚úÖ Application initialized successfully')

  } catch (error) {
    console.error('‚ùå Error during app initialization:', error)
  }
}

export function getAppStatus() {
  return {
    initialized: isInitialized,
    paymentCron: paymentChecker.getStatus(),
    environment: process.env.NODE_ENV,
    cronEnabled: process.env.ENABLE_PAYMENT_CRON === 'true'
  }
}

// Auto-initialize
if (typeof window === 'undefined') { // Server-side only
  initializeApp()
}
/**
 * Email Templates for QUERODOCUMENTO
 * Professional email templates for all transactional emails
 * Now includes enhanced templates with advanced features
 */

// Import all template functions
import { getWelcomeTemplate } from './templates/welcome'
import { getOrderConfirmationTemplate } from './templates/order-confirmation'
import { getPaymentConfirmedTemplate } from './templates/payment-confirmed'
import { getOrderProcessingTemplate } from './templates/order-processing'
import { getQuoteReadyTemplate } from './templates/quote-ready'
import { getOrderCompletedTemplate } from './templates/order-completed'
import { getPasswordResetTemplate } from './templates/password-reset'
import { getStatusUpdateTemplate } from './templates/status-update'
import { EmailTemplateData, EmailTemplate } from './templates/base'

// Re-export for compatibility
export { EmailTemplateData, EmailTemplate }

/**
 * Legacy base email template wrapper (deprecated)
 * Use templates/base.ts for new implementations
 */
function wrapTemplate(content: string, title: string = 'QueroDocumento'): string {
  return `
    <!DOCTYPE html>
    <html lang="pt-BR">
    <head>
      <meta charset="UTF-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>${title}</title>
      <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body { 
          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', sans-serif;
          line-height: 1.6;
          color: #374151;
          background-color: #f9fafb;
        }
        .container {
          max-width: 600px;
          margin: 0 auto;
          background: white;
          box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
        }
        .header {
          background: linear-gradient(135deg, #1e40af 0%, #3b82f6 50%, #60a5fa 100%);
          padding: 40px 30px;
          text-align: center;
          color: white;
        }
        .logo {
          display: inline-flex;
          align-items: center;
          font-size: 28px;
          font-weight: bold;
          margin-bottom: 8px;
        }
        .logo-icon {
          width: 36px;
          height: 36px;
          background: rgba(255, 255, 255, 0.2);
          border-radius: 50%;
          display: inline-flex;
          align-items: center;
          justify-content: center;
          margin-right: 12px;
          font-weight: bold;
        }
        .content {
          padding: 40px 30px;
        }
        .content h1 {
          color: #111827;
          margin-bottom: 20px;
          font-size: 24px;
        }
        .content h2 {
          color: #374151;
          margin: 24px 0 16px 0;
          font-size: 20px;
        }
        .content p {
          margin-bottom: 16px;
          color: #4b5563;
        }
        .button {
          display: inline-block;
          background: linear-gradient(135deg, #ea580c, #f97316);
          color: white !important;
          text-decoration: none;
          padding: 14px 28px;
          border-radius: 8px;
          font-weight: 600;
          margin: 24px 0;
          transition: transform 0.2s;
        }
        .button:hover {
          transform: translateY(-1px);
        }
        .info-box {
          background: #f3f4f6;
          border: 1px solid #e5e7eb;
          border-radius: 8px;
          padding: 20px;
          margin: 24px 0;
        }
        .info-box h3 {
          color: #374151;
          margin-bottom: 12px;
        }
        .warning {
          background: #fef3c7;
          border: 1px solid #f59e0b;
          border-radius: 8px;
          padding: 16px;
          margin: 24px 0;
        }
        .warning-title {
          font-weight: 600;
          color: #92400e;
          margin-bottom: 8px;
        }
        .warning-text {
          color: #78350f;
          font-size: 14px;
        }
        .success {
          background: #d1fae5;
          border: 1px solid #10b981;
          border-radius: 8px;
          padding: 16px;
          margin: 24px 0;
        }
        .success-title {
          font-weight: 600;
          color: #059669;
          margin-bottom: 8px;
        }
        .success-text {
          color: #047857;
          font-size: 14px;
        }
        .footer {
          background: #f9fafb;
          padding: 30px;
          text-align: center;
          font-size: 14px;
          color: #6b7280;
          border-top: 1px solid #e5e7eb;
        }
        .footer p {
          margin: 8px 0;
        }
        .divider {
          border: none;
          border-top: 1px solid #e5e7eb;
          margin: 32px 0;
        }
        @media (max-width: 600px) {
          .container { margin: 0; }
          .content, .header, .footer { padding: 20px; }
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <div class="logo">
            <span class="logo-icon">Q</span>
            QueroDocumento
          </div>
          <p style="margin: 0; opacity: 0.9; font-size: 16px;">${title}</p>
        </div>
        ${content}
        <div class="footer">
          <p><strong>QueroDocumento</strong> - Consulta e Certid√£o de Protesto</p>
          <p>Atendimento via WhatsApp - Resposta em at√© 24 horas √∫teis</p>
          <p>Nossa equipe de especialistas garante rapidez e qualidade</p>
          <hr style="border: none; border-top: 1px solid #d1d5db; margin: 16px 0;">
          <p style="font-size: 12px;">¬© ${new Date().getFullYear()} QueroDocumento. Todos os direitos reservados.</p>
        </div>
      </div>
    </body>
    </html>
  `
}

/**
 * Password Reset Email Template (Legacy)
 * Use templates/password-reset.ts for enhanced version
 */
export function getLegacyPasswordResetTemplate(data: EmailTemplateData): { html: string; text: string; subject: string } {
  const { name, email, resetUrl } = data
  
  const html = wrapTemplate(`
    <div class="content">
      <h1>Redefinir Senha</h1>
      <p>Ol√° <strong>${name}</strong>,</p>
      <p>Recebemos uma solicita√ß√£o para redefinir a senha da sua conta no QueroDocumento.</p>
      <p>Se voc√™ fez esta solicita√ß√£o, clique no bot√£o abaixo para criar uma nova senha:</p>
      
      <div style="text-align: center;">
        <a href="${resetUrl}" class="button">Redefinir Minha Senha</a>
      </div>
      
      <div class="warning">
        <div class="warning-title">‚ö†Ô∏è Importante:</div>
        <div class="warning-text">
          ‚Ä¢ Este link expira em <strong>30 minutos</strong><br>
          ‚Ä¢ Se voc√™ n√£o solicitou esta altera√ß√£o, ignore este email<br>
          ‚Ä¢ Sua senha atual permanecer√° inalterada at√© que voc√™ crie uma nova
        </div>
      </div>
      
      <p style="font-size: 14px; color: #6b7280;">
        Se o bot√£o acima n√£o funcionar, copie e cole este link no seu navegador:<br>
        <a href="${resetUrl}" style="color: #2563eb; word-break: break-all;">${resetUrl}</a>
      </p>
      
      <hr class="divider">
      
      <p style="font-size: 14px; color: #6b7280;">
        Esta solicita√ß√£o foi feita para o email: <strong>${email}</strong>
      </p>
    </div>
  `, 'Redefini√ß√£o de Senha')
  
  const text = `
QueroDocumento - Redefinir Senha

Ol√° ${name},

Recebemos uma solicita√ß√£o para redefinir a senha da sua conta no QueroDocumento.

Se voc√™ fez esta solicita√ß√£o, acesse o link abaixo para criar uma nova senha:
${resetUrl}

IMPORTANTE:
‚Ä¢ Este link expira em 30 minutos
‚Ä¢ Se voc√™ n√£o solicitou esta altera√ß√£o, ignore este email
‚Ä¢ Sua senha atual permanecer√° inalterada at√© que voc√™ crie uma nova

Esta solicita√ß√£o foi feita para o email: ${email}

Atenciosamente,
Equipe QueroDocumento
  `.trim()
  
  return {
    html,
    text,
    subject: 'Redefinir sua senha - QueroDocumento'
  }
}

/**
 * Welcome Email Template (Legacy)
 * Use templates/welcome.ts for enhanced version
 */
export function getLegacyWelcomeTemplate(data: EmailTemplateData): { html: string; text: string; subject: string } {
  const { name } = data
  
  const html = wrapTemplate(`
    <div class="content">
      <h1>üéâ Bem-vindo(a)!</h1>
      <p>Ol√° <strong>${name}</strong>,</p>
      <p>Parab√©ns! Sua conta no QueroDocumento foi criada com sucesso.</p>
      
      <p>Agora voc√™ pode:</p>
      <ul style="margin-left: 20px; margin-bottom: 20px;">
        <li style="margin-bottom: 8px;">üìã <strong>Consultar protestos</strong> em seu nome ou empresa</li>
        <li style="margin-bottom: 8px;">üìÑ <strong>Emitir certid√µes</strong> positivas e negativas</li>
        <li style="margin-bottom: 8px;">‚ö° <strong>Receber resultados</strong> em at√© 48 horas</li>
        <li style="margin-bottom: 8px;">üí¨ <strong>Suporte via WhatsApp</strong> sempre dispon√≠vel</li>
      </ul>
      
      <div style="text-align: center;">
        <a href="${process.env.NEXTAUTH_URL}/dashboard" class="button">Acessar Minha Conta</a>
      </div>
      
      <div class="success">
        <div class="success-title">üöÄ Pr√≥ximos Passos</div>
        <div class="success-text">
          1. Acesse sua conta e complete seu perfil<br>
          2. Fa√ßa sua primeira consulta de protesto<br>
          3. Explore nossos servi√ßos de certid√£o
        </div>
      </div>
      
      <p style="font-size: 14px; color: #6b7280;">
        Se tiver alguma d√∫vida, nossa equipe est√° dispon√≠vel via WhatsApp para te ajudar!
      </p>
    </div>
  `, 'Bem-vindo ao QueroDocumento')
  
  const text = `
QueroDocumento - Bem-vindo!

Ol√° ${name},

Parab√©ns! Sua conta no QueroDocumento foi criada com sucesso.

Agora voc√™ pode:
‚Ä¢ Consultar protestos em seu nome ou empresa
‚Ä¢ Emitir certid√µes positivas e negativas  
‚Ä¢ Receber resultados em at√© 48 horas
‚Ä¢ Suporte via WhatsApp sempre dispon√≠vel

Acesse sua conta: ${process.env.NEXTAUTH_URL}/dashboard

Pr√≥ximos Passos:
1. Acesse sua conta e complete seu perfil
2. Fa√ßa sua primeira consulta de protesto
3. Explore nossos servi√ßos de certid√£o

Se tiver alguma d√∫vida, nossa equipe est√° dispon√≠vel via WhatsApp!

Atenciosamente,
Equipe QueroDocumento
  `.trim()
  
  return {
    html,
    text,
    subject: 'Bem-vindo ao QueroDocumento! üéâ'
  }
}

/**
 * Order Confirmation Email Template (Legacy)
 * Use templates/order-confirmation.ts for enhanced version
 */
export function getLegacyOrderConfirmationTemplate(data: EmailTemplateData): { html: string; text: string; subject: string } {
  const { name, orderNumber, serviceType, amount } = data
  
  const html = wrapTemplate(`
    <div class="content">
      <h1>Pedido Confirmado</h1>
      <p>Ol√° <strong>${name}</strong>,</p>
      <p>Seu pedido foi confirmado com sucesso! Estamos processando sua solicita√ß√£o.</p>
      
      <div class="info-box">
        <h3>üìã Detalhes do Pedido</h3>
        <p><strong>N√∫mero do Pedido:</strong> ${orderNumber}</p>
        <p><strong>Servi√ßo:</strong> ${serviceType}</p>
        <p><strong>Valor:</strong> ${amount}</p>
        <p><strong>Status:</strong> Confirmado</p>
      </div>
      
      <div class="success">
        <div class="success-title">‚úÖ Pr√≥ximas Etapas</div>
        <div class="success-text">
          1. Processaremos sua solicita√ß√£o em at√© 48 horas<br>
          2. Voc√™ receber√° um email quando estiver pronto<br>
          3. O documento ficar√° dispon√≠vel em sua conta
        </div>
      </div>
      
      <div style="text-align: center;">
        <a href="${process.env.NEXTAUTH_URL}/dashboard" class="button">Acompanhar Pedido</a>
      </div>
      
      <p style="font-size: 14px; color: #6b7280;">
        Precisa de ajuda? Entre em contato conosco via WhatsApp.
      </p>
    </div>
  `, 'Pedido Confirmado')
  
  const text = `
QueroDocumento - Pedido Confirmado

Ol√° ${name},

Seu pedido foi confirmado com sucesso!

Detalhes do Pedido:
‚Ä¢ N√∫mero: ${orderNumber}
‚Ä¢ Servi√ßo: ${serviceType}
‚Ä¢ Valor: ${amount}
‚Ä¢ Status: Confirmado

Pr√≥ximas Etapas:
1. Processaremos sua solicita√ß√£o em at√© 48 horas
2. Voc√™ receber√° um email quando estiver pronto
3. O documento ficar√° dispon√≠vel em sua conta

Acompanhe em: ${process.env.NEXTAUTH_URL}/dashboard

Precisa de ajuda? Entre em contato via WhatsApp.

Atenciosamente,
Equipe QueroDocumento
  `.trim()
  
  return {
    html,
    text,
    subject: `Pedido confirmado - ${orderNumber}`
  }
}

/**
 * Order Completed Email Template (Legacy)
 * Use templates/order-completed.ts for enhanced version
 */
export function getLegacyOrderCompletedTemplate(data: EmailTemplateData): { html: string; text: string; subject: string } {
  const { name, orderNumber, downloadUrl } = data
  
  const html = wrapTemplate(`
    <div class="content">
      <h1>üéâ Pedido Pronto!</h1>
      <p>Ol√° <strong>${name}</strong>,</p>
      <p>√ìtimas not√≠cias! Seu pedido foi processado e est√° pronto para download.</p>
      
      <div class="info-box">
        <h3>üìã Pedido Finalizado</h3>
        <p><strong>N√∫mero do Pedido:</strong> ${orderNumber}</p>
        <p><strong>Status:</strong> Conclu√≠do ‚úÖ</p>
      </div>
      
      <div style="text-align: center;">
        <a href="${downloadUrl}" class="button">Baixar Documento</a>
      </div>
      
      <div class="warning">
        <div class="warning-title">üì± Importante:</div>
        <div class="warning-text">
          ‚Ä¢ O documento tamb√©m est√° dispon√≠vel em sua conta<br>
          ‚Ä¢ Mantenha o documento em local seguro<br>
          ‚Ä¢ Em caso de d√∫vidas, entre em contato conosco
        </div>
      </div>
      
      <p style="font-size: 14px; color: #6b7280;">
        Obrigado por escolher o QueroDocumento! Conte conosco para futuros servi√ßos.
      </p>
    </div>
  `, 'Documento Pronto')
  
  const text = `
QueroDocumento - Documento Pronto

Ol√° ${name},

√ìtimas not√≠cias! Seu pedido foi processado e est√° pronto para download.

Pedido: ${orderNumber}
Status: Conclu√≠do ‚úÖ

Baixar documento: ${downloadUrl}

Importante:
‚Ä¢ O documento tamb√©m est√° dispon√≠vel em sua conta
‚Ä¢ Mantenha o documento em local seguro
‚Ä¢ Em caso de d√∫vidas, entre em contato conosco

Obrigado por escolher o QueroDocumento!

Atenciosamente,
Equipe QueroDocumento
  `.trim()
  
  return {
    html,
    text,
    subject: `Seu pedido est√° pronto! - ${orderNumber}`
  }
}

/**
 * Payment Confirmation Email Template (Legacy)
 * Use templates/payment-confirmed.ts for enhanced version
 */
export function getLegacyPaymentConfirmationTemplate(data: EmailTemplateData): { html: string; text: string; subject: string } {
  const { name, orderNumber, amount, paymentMethod } = data
  
  const html = wrapTemplate(`
    <div class="content">
      <h1>‚úÖ Pagamento Confirmado</h1>
      <p>Ol√° <strong>${name}</strong>,</p>
      <p>Recebemos a confirma√ß√£o do seu pagamento. Seu pedido ser√° processado em breve!</p>
      
      <div class="info-box">
        <h3>üí≥ Detalhes do Pagamento</h3>
        <p><strong>Pedido:</strong> ${orderNumber}</p>
        <p><strong>Valor:</strong> ${amount}</p>
        <p><strong>M√©todo:</strong> ${paymentMethod}</p>
        <p><strong>Status:</strong> Confirmado ‚úÖ</p>
      </div>
      
      <div class="success">
        <div class="success-title">üöÄ O que acontece agora?</div>
        <div class="success-text">
          1. Iniciaremos o processamento do seu pedido<br>
          2. Voc√™ receber√° atualiza√ß√µes por email<br>
          3. O resultado estar√° pronto em at√© 48 horas
        </div>
      </div>
      
      <div style="text-align: center;">
        <a href="${process.env.NEXTAUTH_URL}/dashboard" class="button">Ver Meus Pedidos</a>
      </div>
      
      <p style="font-size: 14px; color: #6b7280;">
        Agradecemos pela confian√ßa! Nossa equipe j√° est√° trabalhando no seu pedido.
      </p>
    </div>
  `, 'Pagamento Confirmado')
  
  const text = `
QueroDocumento - Pagamento Confirmado

Ol√° ${name},

Recebemos a confirma√ß√£o do seu pagamento!

Detalhes:
‚Ä¢ Pedido: ${orderNumber}
‚Ä¢ Valor: ${amount}  
‚Ä¢ M√©todo: ${paymentMethod}
‚Ä¢ Status: Confirmado ‚úÖ

O que acontece agora?
1. Iniciaremos o processamento do seu pedido
2. Voc√™ receber√° atualiza√ß√µes por email
3. O resultado estar√° pronto em at√© 48 horas

Acompanhe em: ${process.env.NEXTAUTH_URL}/dashboard

Agradecemos pela confian√ßa!

Atenciosamente,
Equipe QueroDocumento
  `.trim()
  
  return {
    html,
    text,
    subject: `Pagamento confirmado - ${orderNumber}`
  }
}

/**
 * Enhanced template selector with all available templates
 * Supports both legacy and new template formats
 */
export function getEmailTemplate(templateName: string, data: EmailTemplateData): EmailTemplate {
  switch (templateName) {
    // Enhanced templates (recommended)
    case 'welcome':
      return getWelcomeTemplate(data)
    case 'order-confirmation':
      return getOrderConfirmationTemplate(data)
    case 'payment-confirmed':
    case 'payment-confirmation': // Backward compatibility
      return getPaymentConfirmedTemplate(data)
    case 'order-processing':
      return getOrderProcessingTemplate(data)
    case 'quote-ready':
      return getQuoteReadyTemplate(data)
    case 'order-completed':
      return getOrderCompletedTemplate(data)
    case 'password-reset':
      return getPasswordResetTemplate(data)
    case 'status-update':
      return getStatusUpdateTemplate(data)
    
    // Legacy templates (for backward compatibility)
    case 'legacy-welcome':
      return getLegacyWelcomeTemplate(data)
    case 'legacy-order-confirmation':
      return getLegacyOrderConfirmationTemplate(data)
    case 'legacy-order-completed':
      return getLegacyOrderCompletedTemplate(data)
    case 'legacy-payment-confirmation':
      return getLegacyPaymentConfirmationTemplate(data)
    case 'legacy-password-reset':
      return getLegacyPasswordResetTemplate(data)
    
    default:
      throw new Error(`Unknown email template: ${templateName}. Available templates: welcome, order-confirmation, payment-confirmed, order-processing, quote-ready, order-completed, password-reset, status-update`)
  }
}

/**
 * Get list of available templates
 */
export function getAvailableTemplates(): string[] {
  return [
    'welcome',
    'order-confirmation', 
    'payment-confirmed',
    'order-processing',
    'quote-ready',
    'order-completed',
    'password-reset',
    'status-update'
  ]
}

/**
 * Template metadata for admin interface
 */
export interface TemplateMetadata {
  name: string
  description: string
  category: 'user' | 'order' | 'system'
  variables: string[]
}

export function getTemplateMetadata(): Record<string, TemplateMetadata> {
  return {
    'welcome': {
      name: 'Boas-vindas',
      description: 'Email de boas-vindas enviado ap√≥s o cadastro',
      category: 'user',
      variables: ['name', 'email', 'dashboardUrl', 'createdAt']
    },
    'order-confirmation': {
      name: 'Confirma√ß√£o de Pedido',
      description: 'Confirma√ß√£o enviada quando um pedido √© criado',
      category: 'order',
      variables: ['name', 'orderNumber', 'serviceType', 'amount', 'requiresPayment', 'isPIX', 'isCreditCard', 'documents']
    },
    'payment-confirmed': {
      name: 'Pagamento Confirmado',
      description: 'Enviado quando o pagamento √© processado com sucesso',
      category: 'order', 
      variables: ['name', 'orderNumber', 'amount', 'paymentMethod', 'isPIX', 'isCreditCard']
    },
    'order-processing': {
      name: 'Pedido em Processamento',
      description: 'Enviado quando o processamento √© iniciado',
      category: 'order',
      variables: ['name', 'orderNumber', 'serviceType', 'orderStatus', 'hasProtests', 'protests', 'dueDate']
    },
    'quote-ready': {
      name: 'Or√ßamento Dispon√≠vel',
      description: 'Enviado quando um or√ßamento est√° pronto para aprova√ß√£o',
      category: 'order',
      variables: ['name', 'orderNumber', 'serviceType', 'amount', 'hasProtests', 'protests', 'expiresAt']
    },
    'order-completed': {
      name: 'Pedido Conclu√≠do',
      description: 'Enviado quando o pedido √© finalizado e documentos est√£o prontos',
      category: 'order',
      variables: ['name', 'orderNumber', 'serviceType', 'downloadUrl', 'hasProtests', 'protests', 'documents', 'expiresAt']
    },
    'password-reset': {
      name: 'Redefini√ß√£o de Senha',
      description: 'Email para recupera√ß√£o de senha',
      category: 'user',
      variables: ['name', 'email', 'resetUrl', 'createdAt']
    },
    'status-update': {
      name: 'Atualiza√ß√£o de Status',
      description: 'Template gen√©rico para mudan√ßas de status',
      category: 'system',
      variables: ['name', 'orderNumber', 'orderStatus', 'previousStatus', 'message', 'nextSteps', 'requiresAction', 'actionRequired', 'actionUrl', 'documents', 'estimatedTime', 'additionalInfo']
    }
  }
}
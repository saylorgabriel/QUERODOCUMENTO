services:
  # Aplicação em modo desenvolvimento com hot-reload
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: querodocumento-app-dev
    ports:
      - "3009:3000"
    env_file:
      - .env.docker
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - postgres
      - redis
      - mailhog
    command: sh -c "bun prisma generate && bun run dev"
    networks:
      - querodoc-network

  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: querodocumento-db-dev
    environment:
      - POSTGRES_USER=querodoc
      - POSTGRES_PASSWORD=querodoc123
      - POSTGRES_DB=querodocumento
    volumes:
      - postgres-dev-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - querodoc-network

  # Redis para cache e filas
  redis:
    image: redis:7-alpine
    container_name: querodocumento-redis-dev
    command: redis-server
    ports:
      - "6379:6379"
    networks:
      - querodoc-network

  # MailHog para teste de emails
  mailhog:
    image: mailhog/mailhog:latest
    container_name: querodocumento-mailhog
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI para visualizar emails
    networks:
      - querodoc-network

  # Adminer para gerenciar o banco de dados
  # adminer:
  #   image: adminer:latest
  #   container_name: querodocumento-adminer
  #   ports:
  #     - "8080:8080"
  #   environment:
  #     - ADMINER_DEFAULT_SERVER=postgres
  #   depends_on:
  #     - postgres
  #   networks:
  #     - querodoc-network

  # Worker para processar webhooks
  webhook-worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: querodocumento-webhook-worker
    env_file:
      - .env.docker
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    command: sh -c "bun prisma generate && bun run worker:webhook"
    networks:
      - querodoc-network
    restart: unless-stopped

volumes:
  postgres-dev-data:
    driver: local

networks:
  querodoc-network:
    driver: bridge